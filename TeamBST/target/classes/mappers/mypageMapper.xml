<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.itwillbs.mapper.MypageMapper">

  <!-- 회원정보 조회 (by user_id) -->
  <select id="getMember" resultType="com.itwillbs.domain.UserDTO">
    SELECT *
    FROM user
    WHERE user_id = #{user_id}
  </select>

  <!-- 회원정보 수정 -->
  <update id="updateMember">
    UPDATE user
    SET
      user_name = #{user_name},
      user_nick = #{user_nick},
      user_phone = #{user_phone},
      user_email = #{user_email},
      user_birth = #{user_birth}
    WHERE user_id = #{user_id} and user_pwd = #{user_pwd}
  </update>

  <!-- 회원정보 삭제 
  		=> 삭제 로직이지만 update로 처리 할 예정 -->
<!--   <delete id="deleteMember"> -->
<!--     DELETE FROM user -->
<!--     WHERE user_id = #{user_id} AND user_pwd = #{user_pwd} -->
<!--   </delete> -->
	<update id="deleteMember">
		UPDATE user
		set user_status = "OUT"
		where user_id = #{user_id} AND user_pwd = #{user_pwd}
	</update>





  <!-- 내 거래 게시글 목록 -->
  <!-- 
  <select id="postBoardList" resultType="com.itwillbs.domain.Post_boardDTO">
    SELECT *
    FROM post_board
    WHERE post_writer_id = #{user_id}
  </select>
   -->
  
   <!-- 내 질문글 목록 -->
   <!-- 
  <select id="questionBoardList" resultType="com.itwillbs.domain.Question_boardDTO">
	SELECT *
	FROM question_board
	WHERE quest_writer_id = #{user_id};
  </select>
    -->
    
	<!-- 내 게시글 목록 -->
	<select id="myBoardList" resultType="MyBoardDTO">
	  	<if test="boardTable_id == 'All'">
		  	<![CDATA[
		  		select post_id as "board_id", post_sub as "board_sub", post_cre_date as "board_cre_date", post_view as "board_view"
				from post_board
				WHERE post_writer_id = #{user_id}
				union all
				select quest_id, quest_sub, quest_cre_date, quest_view
				from question_board
				WHERE quest_writer_id = #{user_id}
		  	]]>
	  	</if>
	  	<if test="boardTable_id != 'All'">
		  	<if test="boardTable_id == 'Community'">
			  	<![CDATA[
					select post_id as "board_id", post_sub as "board_sub", post_cre_date as "board_cre_date", post_view as "board_view"
					from post_board
					WHERE post_writer_id = #{user_id}
			  	]]>
		  	</if>
		  	<if test="boardTable_id == 'Bulletin'">
			  	<![CDATA[
					select quest_id as "board_id", quest_sub as "board_sub", quest_cre_date as "board_cre_date", quest_view as "board_view"
					from question_board
					WHERE quest_writer_id = #{user_id}
			  	]]>
		  	</if>
		</if>
	</select>
  
  <!-- 내 거래 게시글 조회수 1증가 -->
  <update id="pbUpdateReadCnt">
  	UPDATE post_board
  	SET post_view=post_view+1
  	WHERE post_id=#{post_id}
  </update>
  
  <!-- 내 거래 게시글 본문 -->
  <select id="pGetBoard" resultType="com.itwillbs.domain.Post_boardDTO">
	SELECT *
	FROM post_board
	WHERE post_id=#{post_id}  
  </select>
  
  
  
  <!-- 내 질문글 조회수 1증가 -->
  <update id="qbUpdateReadCnt">
	UPDATE question_board
	SET quest_view=quest_view+1
	WHERE quest_id=#{quest_id}
  </update>
  
  <!-- 내 질문글 본문 -->
  <select id="qGetBoard" resultType="com.itwillbs.domain.Question_boardDTO">
	SELECT * 
	FROM question_board
	WHERE quest_id=#{quest_id}
  </select>
  
  <!-- 아이디 비번 비교 -->
  <select id="getPassword" resultType="string" parameterType="string">
    SELECT user_pwd FROM user WHERE user_id = #{user_id}
</select>
  
  
  <!-- 내 지난경기목록 -->
  <!-- 
  <select id="previousMatchList" resultType="com.itwillbs.domain.Game_scheduleDTO">
	<![CDATA[
	select game_date, game_time, stad_id, home_team_id, away_team_id
	from (reservation_info ri1 join game_schedule gs
	on ri1.game_id = gs.game_id), 
	(reservation_info ri2 join user u
	on ri2.user_id = u.user_id)
	where u.user_id = #{user_id} and (gs.game_date < curdate()or(gs.game_date = curdate() and gs.game_time < curtime()))
	]]>
  </select>
   -->
   
  <!-- 내 예정경기목록 -->
  <!-- 
  <select id="openMatchList" resultType="com.itwillbs.domain.Game_scheduleDTO">
	<![CDATA[
	select game_date, game_time, stad_id, home_team_id, away_team_id
	from (reservation_info ri1 join game_schedule gs
	on ri1.game_id = gs.game_id), 
	(reservation_info ri2 join user u
	on ri2.user_id = u.user_id)
	where u.user_id = #{user_id} and (gs.game_date > curdate()or(gs.game_date = curdate() and gs.game_time > curtime()))
	]]>
  </select>
   -->
   
   
   <!-- 내 예매 내역 -->
   <select id="ticketList" resultType="com.itwillbs.domain.Game_scheduleDTO">
		<![CDATA[
			SELECT 
			    ri.game_id,
			    gs.game_date,
			    gs.game_time,
			    gs.stad_id,
			    gs.home_team_id,
			    gs.away_team_id,
			    GROUP_CONCAT(ri.seat1_id ORDER BY ri.seat1_id) AS seat1_id,
			    GROUP_CONCAT(ri.seat2_id ORDER BY ri.seat2_id) AS seat2_id,
			    GROUP_CONCAT(ri.seat3_id ORDER BY ri.seat3_id) AS seat3_id,
			    GROUP_CONCAT(ri.seat4_id ORDER BY ri.seat4_id) AS seat4_id,
			    GROUP_CONCAT(ri.seat5_id ORDER BY ri.seat5_id) AS seat5_id,
			    GROUP_CONCAT(ri.seat6_id ORDER BY ri.seat6_id) AS seat6_id,
			    GROUP_CONCAT(ri.seat7_id ORDER BY ri.seat7_id) AS seat7_id,
			    GROUP_CONCAT(ri.seat8_id ORDER BY ri.seat8_id) AS seat8_id
			FROM reservation_info ri
			JOIN game_schedule gs ON ri.game_id = gs.game_id 
			JOIN user u ON ri.user_id = u.user_id 
			WHERE u.user_id = #{user_id} 
			  AND (
			    (#{ticket_status} = 'Upcoming' AND (gs.game_date > CURDATE() OR (gs.game_date = CURDATE() AND gs.game_time > CURTIME())))
			    OR
			    (#{ticket_status} = 'Past' AND (gs.game_date < CURDATE() OR (gs.game_date = CURDATE() AND gs.game_time < CURTIME())))
			  )
			GROUP BY ri.game_id, gs.game_date, gs.game_time, gs.stad_id, gs.home_team_id, gs.away_team_id;

		]]>
  	</select>
  	
  	
  	<select id="getReserSeatList" resultType="com.itwillbs.domain.Reservation_infoDTO">
  		SELECT ri.seat1_id, ri.seat2_id 
		FROM reservation_info ri
		JOIN game_schedule gs ON ri.game_id = gs.game_id 
		JOIN user u ON ri.user_id = u.user_id 
		WHERE u.user_id = #{user_id}
	</select>
  			
<!-- 			SELECT ri.game_id, gs.game_date, gs.game_time, gs.stad_id, gs.home_team_id, gs.away_team_id -->
<!-- 			FROM reservation_info ri -->
<!-- 			JOIN game_schedule gs ON ri.game_id = gs.game_id  -->
<!-- 			JOIN user u ON ri.user_id = u.user_id  -->
<!-- 			WHERE u.user_id = #{user_id} -->
<!-- 			  AND ( -->
<!-- 			    (#{ticket_status} = 'Upcoming' AND (gs.game_date > CURDATE() OR (gs.game_date = CURDATE() AND gs.game_time > CURTIME())))  -->
<!-- 			    OR  -->
<!-- 			    (#{ticket_status} = 'Past' AND (gs.game_date < CURDATE() OR (gs.game_date = CURDATE() AND gs.game_time < CURTIME())))  -->
<!-- 			  ) -->
<!-- 			GROUP BY ri.game_id -->
  	
  	
  	<!-- select ri1.game_id, game_date, game_time, stad_id, home_team_id, away_team_id
			from (reservation_info ri1 join game_schedule gs
			on ri1.game_id = gs.game_id), 
			(reservation_info ri2 join user u
			on ri2.user_id = u.user_id)
			where u.user_id = #{user_id} and ri1.game_id = ri2.game_id
				and (
					case 
						when #{ticket_status} = 'Upcoming' then (gs.game_date > curdate()or(gs.game_date = curdate() and gs.game_time > curtime()))
						when #{ticket_status} = 'Past' then (gs.game_date < curdate()or(gs.game_date = curdate() and gs.game_time < curtime()))
					end
				) -->
  

</mapper>
