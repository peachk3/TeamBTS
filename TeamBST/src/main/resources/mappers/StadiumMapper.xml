<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.itwillbs.mapper.StadiumMapper">

<!-- join절 사용 위한 resultMap -->
<resultMap type="com.itwillbs.domain.Seat_bookDTO" id="seatBookMap">
	<result property="seat_id" column="seat_id"/>
	<result property="game_id" column="game_id"/>
	<result property="booked_at" column="booked_at"/>
	<collection property="seatList" resultMap="seatMap">
	</collection>
</resultMap>

<resultMap type="com.itwillbs.domain.SeatDTO" id="seatMap">
	<result property="seat_id" column="seat_id"/>
	<result property="seat_row" column="seat_row"/>
	<result property="seat_num" column="seat_num"/>
	<result property="zone_id" column="zone_id"/>
</resultMap>

	<!-- stadium -> zoneList 출력 -->
	<select id="getZonesByStadiumId" resultType="com.itwillbs.domain.ZoneDTO" >
		select z.zone_id, z.zone_ty, z.stad_id
		from zone z
		join game_schedule g
		on g.stad_id = z.stad_id
		where game_id = #{game_id} 
	</select>
 	
	<select id="getSeatsId" resultMap="seatBookMap">
		select s.seat_id, s.seat_row, s.seat_num, s.seat_id, s.zone_id, z.zone_ty
		from seat s
		join zone z
		on s.zone_id = z.zone_id
		join game_schedule g
		on z.stad_id = g.stad_id
		where s.zone_id=#{zone_id} AND g.game_id=#{game_id}
	</select>

	<!-- user_id -> user_name 전달 -->
	<select id="getUserName" resultType="com.itwillbs.domain.UserDTO">
		select *
		from user
		where user_id = #{user_id}
	</select>
	
	<!-- gameSchedulelist 가져오기 -->
	<select id="getGameSche" resultType="com.itwillbs.domain.Game_scheduleDTO">
		select *
		from game_schedule
		where game_id = #{game_id}
	</select>
	
		<!-- 성인 좌석 가격 -->
	<select id="getSeatAdultPrice" resultType="com.itwillbs.domain.Seat_priceDTO">
		select * 
		from seat_price
		where seat_price_id LIKE '%_A' AND zone_id=#{zone_id}
	</select>
	
	<!-- 초등학생 좌석 가격 -->
	<select id="getSeatChildPrice" resultType="com.itwillbs.domain.Seat_priceDTO">
		select * 
		from seat_price
		where seat_price_id LIKE '%_C' AND zone_id=#{zone_id} 
	</select>
	
	<!-- 선택된 좌석 정보 변경 -->
	<update id="postSelectedSeat" parameterType="com.itwillbs.domain.Seat_bookDTO">
		UPDATE seat_book
		SET booked_at=1
		WHERE seat_id = #{seat_id} AND game_id = #{game_id}
	</update>
	
	<!-- 예약 -->
<insert id="insertReser">
    insert into reservation_info(user_id, game_id, pur_name, res_date, res_state, res_pay_price, res_fee
    , seat1_id
    <if test="seat2_id != null">, seat2_id</if>
    <if test="seat3_id != null">, seat3_id</if>
    <if test="seat4_id != null">, seat4_id</if>
    <if test="seat5_id != null">, seat5_id</if>
    <if test="seat6_id != null">, seat6_id</if>
    <if test="seat7_id != null">, seat7_id</if>
    <if test="seat8_id != null">, seat8_id</if>
    )
    values(#{user_id}, #{game_id}, #{pur_name}, now(), #{res_state}, #{res_pay_price}, #{res_fee}
    , #{seat1_id}
    <if test="seat2_id != null">, #{seat2_id}</if>
    <if test="seat3_id != null">, #{seat3_id}</if>
    <if test="seat4_id != null">, #{seat4_id}</if>
    <if test="seat5_id != null">, #{seat5_id}</if>
    <if test="seat6_id != null">, #{seat6_id}</if>
    <if test="seat7_id != null">, #{seat7_id}</if>
    <if test="seat8_id != null">, #{seat8_id}</if>
    )
</insert>

	
	
	<!-- 좌석 예매 가능 여부 확인 -->
<!-- 	<select id="getbBookedAt" resultType="com.itwillbs.domain.Seat_bookDTO"> -->
<!-- 		select sb.game_id, sb.seat_id, sb.booked_at -->
<!-- 		from seat_book sb -->
<!-- 		join seat s -->
<!-- 		on s.seat_id = sb.seat_id -->
<!-- 		where sb.game_id=#{game_id} and s.zone_id=#{zone_id} -->
<!-- 	</select> -->
	
</mapper>
